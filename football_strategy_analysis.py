# -*- coding: utf-8 -*-
"""Football strategy Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lRG8yDChDZYz7ChzM4qhn_MGt-jO9A5S
"""

from google.colab import files

uploaded=files.upload()

# importing required libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("Football-Scenarios-DFE-832307.csv")
#df.style.set_caption('Football-Scenarios')
df.head(5)

# checking the columns in the data
df.columns

# Basic info about data
df.info()

# Getting more info about data like count, mean, min, max.
df.describe()

# checking if any null values present in the data
df.isnull().sum()

# Cheking also for any duplicates values in the data
df.duplicated().sum()

df.columns

# Convert '_last_judgment_at' to datetime
df['_last_judgment_at'] = pd.to_datetime(df['_last_judgment_at'], errors='coerce')

# Set the style for plots
sns.set(style="whitegrid")

plt.figure(figsize=(10, 6))
sns.histplot(df['_trusted_judgments'], kde=True, color='blue')
plt.title('Distribution of Trusted Judgments')
plt.xlabel('Number of Trusted Judgments')
plt.ylabel('Frequency')
plt.show()

plt.figure(figsize=(10, 6))
sns.histplot(df['antecedent:confidence'], kde=True, color='orange')
plt.title('Distribution of Antecedent Confidence Levels')
plt.xlabel('Confidence Level')
plt.ylabel('Frequency')
plt.show()

plt.figure(figsize=(12, 6))
df['_last_judgment_at'].value_counts().sort_index().plot(kind='line', color='purple')
plt.title('Timeline of Judgments')
plt.xlabel('Date of Last Judgment')
plt.ylabel('Number of Judgments')
plt.show()

plt.figure(figsize=(10, 6))
sns.countplot(y=df['antecedent'], palette='viridis')
plt.title('Distribution of Antecedents')
plt.xlabel('Count')
plt.ylabel('Antecedent')
plt.show()

plt.figure(figsize=(12, 8))
df_options = df[['antecedent', 'option1', 'option2', 'option3', 'option4', 'option5']].melt(id_vars=['antecedent'], value_name='option')
sns.countplot(y='antecedent', hue='option', data=df_options, palette='coolwarm')
plt.title('Options Chosen per Antecedent')
plt.xlabel('Count')
plt.ylabel('Antecedent')
plt.legend(title='Option', bbox_to_anchor=(1, 1))
plt.show()

plt.figure(figsize=(8, 6))
numerical_data = df[['antecedent:confidence', '_trusted_judgments']]
corr = numerical_data.corr()
sns.heatmap(corr, annot=True, cmap='coolwarm', linewidths=0.5)
plt.title('Correlation Heatmap')
plt.show()

plt.figure(figsize=(8, 8))
antecedent_counts = df['antecedent'].value_counts()
plt.pie(antecedent_counts, labels=antecedent_counts.index, autopct='%1.1f%%', colors=sns.color_palette('Set3'))
plt.title('Proportion of Different Antecedents')
plt.show()

sns.pairplot(numerical_data)
plt.suptitle('Pair Plot for Numerical Data', y=1.02)
plt.show()

# prompt: pairplot

sns.pairplot(df[['Time', 'Value']]) # Changed column names to match the available columns in the DataFrame
plt.show()

# prompt: create more plots without any error

# Box plot for 'antecedent:confidence' grouped by 'antecedent'
plt.figure(figsize=(12, 6))
sns.boxplot(x='antecedent', y='antecedent:confidence', data=df, palette='Set2')
plt.title('Antecedent Confidence Distribution by Antecedent')
plt.xticks(rotation=45, ha='right')
plt.show()

# Violin plot for '_trusted_judgments' grouped by 'antecedent'
plt.figure(figsize=(12, 6))
sns.violinplot(x='antecedent', y='_trusted_judgments', data=df, palette='husl')
plt.title('Trusted Judgments Distribution by Antecedent')
plt.xticks(rotation=45, ha='right')
plt.show()

avg_confidence = df.groupby('antecedent')['antecedent:confidence'].mean().sort_values(ascending=False)

plt.figure(figsize=(12, 6))
avg_confidence.plot(kind='bar', color='skyblue')
plt.title('Average Confidence Level by Antecedent')
plt.xlabel('Antecedent')
plt.ylabel('Average Confidence Level')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

plt.figure(figsize=(10, 6))
sns.scatterplot(x='antecedent:confidence', y='_trusted_judgments', data=df, hue='antecedent')
plt.title('Confidence vs. Trusted Judgments')
plt.xlabel('Antecedent Confidence')
plt.ylabel('Trusted Judgments')
plt.legend(title='Antecedent', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()
plt.show()